public class MergeSort {

    public static void merge(int mix[], int left[], int right[]) {
        int i = 0, j = 0, k = 0;
        while (i < left.length && j < right.length) {
            if (left[i] <= right[j]) {
                mix[k++] = left[i++];
            } else {
                mix[k++] = right[j++];
            }
        }
        while (i < left.length) {
            mix[k++] = left[i++];
        }
        while (j < right.length) {
            mix[k++] = right[j++];
        }
    }

    public static void mergeSort(int mix[]) {
        if (mix.length <= 1) {
            return;
        }

        int mid = mix.length / 2;
        int[] left = new int[mid];
        int[] right = new int[mix.length - mid];

        for (int i = 0; i < mid; i++) {
            left[i] = mix[i];
        }
        for (int i = mid; i < mix.length; i++) {
            right[i - mid] = mix[i];
        }

        mergeSort(left);
        mergeSort(right);

        merge(mix, left, right);
    }

    public static void main(String[] args) {
        int[] mix = { 38, 27, 43, 3, 9, 82, 10 };
        mergeSort(mix);
        for (int num : mix) {
            System.out.print(num + " ");
        }
    }
}
